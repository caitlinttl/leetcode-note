import java.util.Arrays;

public class leetcode_note {

    // 796. Rotate String Easy---------------------------------------
    public boolean rotateString(String s, String goal) {
      return s.length() == goal.length() && (s+s).contains(goal);
    }

    // 1. Two Sum Easy---------------------------------------
    public int[] twoSum(int[] nums, int target) {
        for (int i = 0; i < nums.length; i++) {
            for (int j = i+1; j < nums.length; j++) {
                if (nums[i] + nums[j] == target) {
                    return new int[] {i, j};
                }
            }
        }
        return new int[] {0, 0};
        // return null;
    }

    // use map
    public int[] twoSum(int[] nums, int target) {
        int[] ans = new int[2];

        HashMap<Integer, Integer> map = new HashMap<>();

        for (int i=0; i < nums.length; i++) {
            int diff = target - nums[i];
            if (map.containsKey(diff)) {
                ans[0] = map.get(diff);
                ans[1] = i;
                return ans;
            }

            map.put(nums[i], i);
        }

        return null;

    }
    public static void main(String[] args) {
        System.out.println("-----test java-----");
        test run = new test();
        
        int[] nums = {2,7,11,15};
        int target = 9;
        int[] ans = run.twoSum(nums, target);
        System.out.println(Arrays.toString(ans));
        
    }    
    


    // num_title Easy Medium---------------------------------------
    // num_title Easy Medium---------------------------------------


    
    // num_title Easy Medium---------------------------------------
    // num_title Easy Medium---------------------------------------
    // num_title Easy Medium---------------------------------------


}



